# Generated by Django 2.1.7 on 2019-04-23 14:00

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Contender',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('num', models.PositiveSmallIntegerField(verbose_name='馬番')),
                ('order_of_finish', models.PositiveSmallIntegerField(null=True, verbose_name='着順')),
                ('penalty', models.CharField(choices=[('NORMAL', '異常なし'), ('SCRATCHED', '取消'), ('EXCLUDED', '除外'), ('FAIL_TO_FINISH', '中止'), ('DISQUALIFIED', '失格'), ('DISQUALIFIED_AND_PLACED', '降着'), ('REMOUNT', '再騎乗')], max_length=255, null=True, verbose_name='異常区分')),
                ('time', models.FloatField(null=True, verbose_name='タイム')),
                ('mounted_weight', models.FloatField(null=True, verbose_name='斤量')),
                ('odds_win', models.FloatField(null=True, verbose_name='確定単勝オッズ')),
                ('odds_show', models.FloatField(null=True, verbose_name='確定複勝オッズ下')),
                ('odds_win_10AM', models.FloatField(null=True, verbose_name='10時単勝オッズ')),
                ('odds_show_10AM', models.FloatField(null=True, verbose_name='10時複勝オッズ')),
                ('popularity', models.PositiveSmallIntegerField(null=True, verbose_name='確定単勝人気順位')),
                ('IDM', models.SmallIntegerField(null=True, verbose_name='ＩＤＭ')),
                ('speed_idx', models.SmallIntegerField(null=True, verbose_name='素点')),
                ('pace', models.SmallIntegerField(null=True, verbose_name='ペース')),
                ('positioning', models.SmallIntegerField(null=True, verbose_name='位置取')),
                ('late_start', models.PositiveSmallIntegerField(null=True, verbose_name='出遅')),
                ('disadvt', models.PositiveSmallIntegerField(null=True, verbose_name='不利')),
                ('b3f_disadvt', models.PositiveSmallIntegerField(help_text='前３Ｆ内での不利', null=True, verbose_name='前不利')),
                ('mid_disadvt', models.PositiveSmallIntegerField(help_text='道中での不利', null=True, verbose_name='中不利')),
                ('f3f_disadvt', models.PositiveSmallIntegerField(help_text='後３Ｆ内での不利', null=True, verbose_name='後不利')),
                ('race_line', models.CharField(choices=[('INNERMOST', '最内'), ('INNER', '内'), ('MIDDLE', '中'), ('OUTER', '外'), ('OUTERMOST', '大外')], max_length=255, verbose_name='コース取り')),
                ('improvement', models.CharField(choices=[('AA', 'AA'), ('A', 'A'), ('B', 'B'), ('C', 'C'), ('?', '?')], max_length=255, verbose_name='上昇度コード')),
                ('physique', models.CharField(choices=[('FAT', '太い'), ('OVERWEIGHT', '余裕'), ('GOOD', '良い'), ('NORMAL', '普通'), ('THIN', '細い'), ('FRESH', '張り'), ('LOOSE', '緩い')], max_length=255, verbose_name='馬体コード')),
                ('demeanor', models.CharField(choices=[('GOOD_CONDITION', '状態良'), ('NORMAL', '平凡'), ('UNSTABLE', '不安定'), ('EXCITED', 'イレ込'), ('GOOD_SPIRIT', '気合良'), ('LACKING_SPIRIT', '気不足'), ('RESTLESS', 'チャカ'), ('EXCITED_AND_RESTLESS', 'イレチ（イレ込+チャカつき）')], max_length=255, verbose_name='気配コード')),
                ('pace_cat', models.CharField(choices=[('HIGH', 'ハイ'), ('MEDIUM', '平均'), ('SLOW', 'スロー')], max_length=255, verbose_name='馬ペース')),
                ('b3f_time_idx', models.FloatField(help_text='前３Ｆタイムを指数化したもの', null=True, verbose_name='テン指数')),
                ('f3f_time_idx', models.FloatField(help_text='後３Ｆタイムを指数化したもの', null=True, verbose_name='上がり指数')),
                ('pace_idx', models.FloatField(help_text='馬のペースを指数化したもの', null=True, verbose_name='ペース指数')),
                ('margin', models.FloatField(help_text='0.1秒単位', null=True, verbose_name='1(2)着タイム差')),
                ('b3f_time', models.FloatField(help_text='0.1秒単位', null=True, verbose_name='前３Ｆタイム')),
                ('f3f_time', models.FloatField(help_text='0.1秒単位', null=True, verbose_name='後３Ｆタイム')),
                ('c1p', models.PositiveSmallIntegerField(null=True, verbose_name='コーナー順位１')),
                ('c2p', models.PositiveSmallIntegerField(null=True, verbose_name='コーナー順位２')),
                ('c3p', models.PositiveSmallIntegerField(null=True, verbose_name='コーナー順位３')),
                ('c4p', models.PositiveSmallIntegerField(null=True, verbose_name='コーナー順位４')),
                ('b3f_1p_margin', models.FloatField(help_text='前３Ｆ地点での先頭とのタイム差（0.1秒単位）', null=True, verbose_name='前３Ｆ先頭差')),
                ('f3f_1p_margin', models.FloatField(help_text='後３Ｆ地点での先頭とのタイム差（0.1秒単位）', null=True, verbose_name='後３Ｆ先頭差')),
                ('weight', models.PositiveSmallIntegerField(null=True, verbose_name='馬体重')),
                ('weight_diff', models.SmallIntegerField(null=True, verbose_name='馬体重増減')),
                ('run_style', models.CharField(choices=[('FRONT_RUNNER', '逃げ'), ('STALKER', '先行'), ('OTP', '差し'), ('OTP_STRETCH', '追込'), ('OTP_GOOD_POS', '好位差し'), ('VERSATILE', '自在')], max_length=255, null=True, verbose_name='レース脚質')),
                ('purse', models.FloatField(null=True, verbose_name='本賞金')),
                ('c4_race_line', models.CharField(choices=[('INNERMOST', '最内'), ('INNER', '内'), ('MIDDLE', '中'), ('OUTER', '外'), ('OUTERMOST', '大外')], help_text='1:最内,2:内,3:中,4:外,5:大外', max_length=255, null=True, verbose_name='４角コース取り')),
                ('prel_jockey_idx', models.FloatField(help_text='基準オッズと騎手の連対率の関係を基に算出された指数値', null=True, verbose_name='騎手指数')),
                ('prel_info_idx', models.FloatField(help_text='基準オッズ、厩舎指数、調教指数等様々な情報を基に算出された指数値', null=True, verbose_name='情報指数')),
                ('prel_total_idx', models.FloatField(help_text='ＩＤＭ、騎手指数、情報指数を合計した値', null=True, verbose_name='総合指数')),
                ('prel_pop_idx', models.PositiveSmallIntegerField(help_text='その馬の人気を指数化した値', null=True, verbose_name='人気指数')),
                ('prel_trainer_idx', models.FloatField(null=True, verbose_name='調教指数')),
                ('prel_stable_idx', models.FloatField(null=True, verbose_name='厩舎指数')),
                ('flat_out_run_idx', models.SmallIntegerField(null=True, verbose_name='激走指数')),
                ('rotation', models.PositiveSmallIntegerField(help_text='間に金曜日が入っている数で決定、連闘は０、初出走はNULL', null=True, verbose_name='ローテーション')),
                ('prel_IDM', models.FloatField(null=True, verbose_name='前日ＩＤＭ')),
                ('prel_run_style', models.CharField(choices=[('FRONT_RUNNER', '逃げ'), ('STALKER', '先行'), ('OTP', '差し'), ('OTP_STRETCH', '追込'), ('OTP_GOOD_POS', '好位差し'), ('VERSATILE', '自在')], max_length=255, verbose_name='前日脚質')),
                ('dist_apt', models.PositiveSmallIntegerField(null=True, verbose_name='距離適性')),
                ('prel_improvement', models.CharField(choices=[('AA', 'AA'), ('A', 'A'), ('B', 'B'), ('C', 'C'), ('?', '?')], max_length=255, null=True, verbose_name='前日上昇度コード')),
                ('odds_win_base', models.FloatField(null=True, verbose_name='基準オッズ')),
                ('pop_win_base', models.PositiveSmallIntegerField(null=True, verbose_name='基準人気順位')),
                ('odds_show_base', models.FloatField(null=True, verbose_name='基準複勝オッズ')),
                ('pop_show_base', models.PositiveSmallIntegerField(null=True, verbose_name='基準複勝人気順位')),
                ('sym_sp_c_dbl', models.PositiveSmallIntegerField(null=True, verbose_name='特定情報◎')),
                ('sym_sp_c', models.PositiveSmallIntegerField(null=True, verbose_name='特定情報○')),
                ('sym_sp_t_dark', models.PositiveSmallIntegerField(null=True, verbose_name='特定情報▲')),
                ('sym_sp_t', models.PositiveSmallIntegerField(null=True, verbose_name='特定情報△')),
                ('sym_sp_x', models.PositiveSmallIntegerField(null=True, verbose_name='特定情報×')),
                ('sym_total_c_dbl', models.PositiveSmallIntegerField(null=True, verbose_name='総合情報◎')),
                ('sym_total_c', models.PositiveSmallIntegerField(null=True, verbose_name='総合情報○')),
                ('sym_total_t_dark', models.PositiveSmallIntegerField(null=True, verbose_name='総合情報▲')),
                ('sym_total_t', models.PositiveSmallIntegerField(null=True, verbose_name='総合情報△')),
                ('sym_total_x', models.PositiveSmallIntegerField(null=True, verbose_name='総合情報×')),
                ('trainer_outlook', models.CharField(choices=[('OUTSTANDING', 'デキ抜群'), ('IMPROVING', '上昇'), ('NO_CHANGE', '平行線'), ('DOWNWARD_TREND', 'やや下降気味'), ('POOR', 'デキ落ち')], max_length=255, null=True, verbose_name='調教矢印コード')),
                ('stable_outlook', models.CharField(choices=[('SUPER_CONFIDENT', '超強気'), ('CONFIDENT', '強気'), ('NO_CHANGE', '現状維持'), ('NOT_CONFIDENT', '弱気')], max_length=255, null=True, verbose_name='厩舎評価コード')),
                ('jockey_exp_1o2_place_rate', models.FloatField(help_text='騎手Ａが単勝基準オッズＢの馬に乗った場合の過去の成績を集計し、算出された連対率', null=True, verbose_name='騎手期待連対率')),
                ('paddock_observed_hoof', models.CharField(choices=[('01', '大ベタ'), ('02', '中ベタ'), ('03', '小ベタ'), ('04', '細ベタ'), ('05', '大立'), ('06', '中立'), ('07', '小立'), ('08', '細立'), ('09', '大標準'), ('10', '中標準'), ('11', '小標準'), ('12', '細標準'), ('17', '大標起'), ('18', '中標起'), ('19', '小標起'), ('20', '細標起'), ('21', '大標ベ'), ('22', '中標ベ'), ('23', '小標ベ'), ('24', '細標ベ')], max_length=255, null=True, verbose_name='蹄コード')),
                ('yield_track_apt', models.CharField(choices=[('STRONG', '得意'), ('NORMAL', '普通'), ('WEAK', '苦手')], max_length=255, null=True, verbose_name='重適正コード')),
                ('blinker', models.CharField(choices=[('FIRST_TIME_USE', '初装着'), ('RETRY', '再装着'), ('USING', 'ブリンカ')], max_length=255, null=True, verbose_name='ブリンカー')),
                ('post_position', models.PositiveSmallIntegerField(null=True, verbose_name='枠番')),
                ('sym_overall', models.PositiveSmallIntegerField(null=True, verbose_name='総合印')),
                ('sym_IDM', models.PositiveSmallIntegerField(null=True, verbose_name='ＩＤＭ印')),
                ('sym_info', models.PositiveSmallIntegerField(null=True, verbose_name='情報印')),
                ('sym_jockey', models.PositiveSmallIntegerField(null=True, verbose_name='騎手印')),
                ('sym_stable', models.PositiveSmallIntegerField(null=True, verbose_name='厩舎印')),
                ('sym_trainer', models.PositiveSmallIntegerField(null=True, verbose_name='調教印')),
                ('is_flat_out_runner', models.BooleanField(null=True, verbose_name='激走印')),
                ('turf_apt', models.CharField(choices=[('STRONG', '得意'), ('NORMAL', '普通'), ('WEAK', '苦手')], max_length=255, null=True, verbose_name='芝適性コード')),
                ('dirt_apt', models.CharField(choices=[('STRONG', '得意'), ('NORMAL', '普通'), ('WEAK', '苦手')], max_length=255, null=True, verbose_name='ダ適性コード')),
                ('prel_b3f_time_idx', models.FloatField(null=True, verbose_name='予想テン指数')),
                ('prel_pace_idx', models.FloatField(null=True, verbose_name='予想ペース指数')),
                ('prel_f3f_time_idx', models.FloatField(null=True, verbose_name='予想上がり指数')),
                ('prel_position_idx', models.FloatField(null=True, verbose_name='予想位置指数')),
                ('prel_pace_cat', models.CharField(choices=[('HIGH', 'ハイ'), ('MEDIUM', '平均'), ('SLOW', 'スロー')], max_length=255, null=True, verbose_name='馬ペース')),
                ('mid_race_position', models.PositiveSmallIntegerField(null=True, verbose_name='道中順位')),
                ('mid_race_margin', models.FloatField(null=True, verbose_name='道中差')),
                ('mid_race_line', models.CharField(choices=[('INNERMOST', '最内'), ('INNER', '内'), ('MIDDLE', '中'), ('OUTER', '外'), ('OUTERMOST', '大外')], max_length=255, null=True, verbose_name='道中内外')),
                ('f3f_position', models.PositiveSmallIntegerField(null=True, verbose_name='後３Ｆ順位')),
                ('f3f_margin', models.FloatField(null=True, verbose_name='後３Ｆ差')),
                ('f3f_race_line', models.CharField(choices=[('INNERMOST', '最内'), ('INNER', '内'), ('MIDDLE', '中'), ('OUTER', '外'), ('OUTERMOST', '大外')], max_length=255, null=True, verbose_name='後３Ｆ内外')),
                ('goal_position', models.PositiveSmallIntegerField(null=True, verbose_name='ゴール順位')),
                ('goal_margin', models.FloatField(null=True, verbose_name='ゴール差')),
                ('goal_race_line', models.CharField(choices=[('INNERMOST', '最内'), ('INNER', '内'), ('MIDDLE', '中'), ('OUTER', '外'), ('OUTERMOST', '大外')], max_length=255, null=True, verbose_name='ゴール内外')),
                ('race_development_symbol', models.CharField(choices=[('FRONT_RUNNER', '逃馬'), ('FASTEST_F3F', '上がりの最も速い馬'), ('FAST_F3F', '上がりの速い馬(2,3番目)'), ('LACK_DATA', 'データ不足で確認が必要な馬'), ('OTHER', 'その他')], max_length=255, null=True, verbose_name='展開記号')),
                ('dist_apt_2', models.PositiveSmallIntegerField(null=True, verbose_name='距離適性２')),
                ('is_cancelled', models.BooleanField(null=True, verbose_name='取消フラグ')),
                ('flat_out_run_position', models.PositiveSmallIntegerField(help_text='レース出走馬中での順位', null=True, verbose_name='激走順位')),
                ('LS_idx_position', models.PositiveSmallIntegerField(null=True, verbose_name='LS指数順位')),
                ('b3f_idx_position', models.PositiveSmallIntegerField(null=True, verbose_name='テン指数順位')),
                ('pace_idx_position', models.PositiveSmallIntegerField(null=True, verbose_name='ペース指数順位')),
                ('f3f_idx_position', models.PositiveSmallIntegerField(null=True, verbose_name='上がり指数順位')),
                ('positioning_idx_position', models.PositiveSmallIntegerField(null=True, verbose_name='位置指数順位')),
                ('jockey_exp_win_rate', models.FloatField(null=True, verbose_name='騎手期待単勝率')),
                ('jockey_exp_show_rate', models.FloatField(null=True, verbose_name='騎手期待３着内率')),
                ('transport_category', models.CharField(choices=[('STAY', '滞在'), ('NORMAL', '通常'), ('VISIT', '遠征'), ('UNKNOWN', '不明')], max_length=255, null=True, verbose_name='輸送区分')),
                ('figure_overall', models.CharField(choices=[('RECT', '長方形'), ('NORMAL', '普通'), ('SQUARE', '正方形')], help_text='馬体の全体的な形状', max_length=255, null=True, verbose_name='体型')),
                ('length_back', models.CharField(choices=[('LONG', '長い'), ('NORMAL', '普通'), ('SHORT', '短い')], max_length=255, null=True, verbose_name='背中')),
                ('length_body', models.CharField(choices=[('LONG', '長い'), ('NORMAL', '普通'), ('SHORT', '短い')], max_length=255, null=True, verbose_name='体型')),
                ('size_rump', models.CharField(choices=[('LARGE', '大きい'), ('NORMAL', '普通'), ('SMALL', '小さい')], max_length=255, null=True, verbose_name='背中')),
                ('size_hindquarters', models.CharField(choices=[('LARGE', '大きい'), ('NORMAL', '普通'), ('SMALL', '小さい')], max_length=255, null=True, verbose_name='胴')),
                ('size_belly', models.CharField(choices=[('LARGE', '大きい'), ('NORMAL', '普通'), ('SMALL', '小さい')], max_length=255, null=True, verbose_name='尻')),
                ('size_head', models.CharField(choices=[('LARGE', '大きい'), ('NORMAL', '普通'), ('SMALL', '小さい')], max_length=255, null=True, verbose_name='トモ')),
                ('length_neck', models.CharField(choices=[('LONG', '長い'), ('NORMAL', '普通'), ('SHORT', '短い')], max_length=255, null=True, verbose_name='腹袋')),
                ('size_breast', models.CharField(choices=[('LARGE', '大きい'), ('NORMAL', '普通'), ('SMALL', '小さい')], max_length=255, null=True, verbose_name='頭')),
                ('size_shoulder', models.CharField(choices=[('LARGE', '大きい'), ('NORMAL', '普通'), ('SMALL', '小さい')], max_length=255, null=True, verbose_name='首')),
                ('length_front', models.CharField(choices=[('LONG', '長い'), ('NORMAL', '普通'), ('SHORT', '短い')], max_length=255, null=True, verbose_name='前長')),
                ('length_rear', models.CharField(choices=[('LONG', '長い'), ('NORMAL', '普通'), ('SHORT', '短い')], max_length=255, null=True, verbose_name='後長')),
                ('stride_front', models.CharField(choices=[('WIDE', '広い'), ('NORMAL', '普通'), ('NARROW', '狭い')], max_length=255, null=True, verbose_name='前幅')),
                ('stride_rear', models.CharField(choices=[('WIDE', '広い'), ('NORMAL', '普通'), ('NARROW', '狭い')], max_length=255, null=True, verbose_name='後幅')),
                ('length_pastern_front', models.CharField(choices=[('LONG', '長い'), ('NORMAL', '普通'), ('SHORT', '短い')], max_length=255, null=True, verbose_name='前繋')),
                ('length_pastern_rear', models.CharField(choices=[('LONG', '長い'), ('NORMAL', '普通'), ('SHORT', '短い')], max_length=255, null=True, verbose_name='後繋')),
                ('is_dock_raised', models.BooleanField(help_text='つけ根の上げ方 TRUE:上げる, FALSE:下げる', null=True, verbose_name='尾')),
                ('tail_swing_intensity', models.CharField(max_length=255, null=True, verbose_name='振')),
                ('horse_start_idx', models.FloatField(null=True, verbose_name='馬スタート指数')),
                ('late_start_rate', models.FloatField(null=True, verbose_name='馬出遅率')),
                ('big_bet_idx', models.PositiveSmallIntegerField(null=True, verbose_name='万券指数')),
                ('sym_big_bet', models.PositiveSmallIntegerField(null=True, verbose_name='万券印')),
                ('rank_lowered', models.CharField(choices=[('SINGLE', '降級'), ('DOUBLE', '２段階降級'), ('NO_CHANGE', '通常')], max_length=255, null=True, verbose_name='降級フラグ')),
                ('flat_out_run_type', models.CharField(choices=[('A1', '激走馬、中位人気グループで激走指数１番手'), ('A2', '激走馬、中位人気グループで激走指数２番手'), ('A3', '激走馬、中位人気グループで激走指数３番手'), ('A4', '中位人気グループで激走指数４番手'), ('B1', '下位人気グループで激走指数１番手'), ('B2', '下位人気グループで激走指数１番手')], max_length=255, null=True, verbose_name='激走タイプ')),
                ('rest_reason', models.CharField(choices=[('01', '放牧'), ('02', '放牧(故障、骨折等)'), ('03', '放牧(不安、ソエ等)'), ('04', '放牧(病気)'), ('05', '放牧(再審査)'), ('06', '放牧(出走停止)'), ('07', '放牧(手術）'), ('11', '調整'), ('12', '調整(故障、骨折等)'), ('13', '調整(不安、ソエ等)'), ('14', '調整(病気)')], max_length=255, null=True, verbose_name='休養理由分類コード')),
                ('prior_context_surface', models.CharField(max_length=255, null=True, verbose_name='芝ダ障害フラグ')),
                ('is_longest_race_dist_yet', models.BooleanField(null=True, verbose_name='距離フラグ')),
                ('prior_context_race_class', models.CharField(max_length=255, null=True, verbose_name='クラスフラグ')),
                ('nth_race_since_stable_change', models.PositiveSmallIntegerField(null=True, verbose_name='転厩フラグ')),
                ('nth_race_since_castration', models.PositiveSmallIntegerField(null=True, verbose_name='去勢フラグ')),
                ('nth_race_since_training_start', models.PositiveSmallIntegerField(null=True, verbose_name='入厩何走目')),
                ('training_start_date', models.DateField(null=True, verbose_name='入厩年月日')),
                ('nth_day_since_training_start', models.PositiveSmallIntegerField(null=True, verbose_name='入厩何日前')),
                ('pasture_name', models.CharField(max_length=255, null=True, verbose_name='放牧先')),
                ('pasture_rank', models.CharField(choices=[('A', 'Ａランク (休み明けのハンデが無い)'), ('B', 'Ｂランク'), ('C', 'Ｃランク (普通)'), ('D', 'Ｄランク'), ('E', 'Ｅランク')], max_length=255, null=True, verbose_name='放牧先ランク')),
                ('stable_rank', models.CharField(choices=[('S', 'S級 ピンク'), ('A', 'A級 オレンジ'), ('B', 'B級 黄色'), ('NORMAL', 'ノーマル'), ('D', 'D級 青'), ('E', 'E級 紫'), ('F', 'F級 灰色'), ('BELOW_F', 'その他総数１０以下の厩舎')], max_length=255, null=True, verbose_name='厩舎ランク')),
                ('paddock_comment', models.CharField(max_length=40, null=True, verbose_name='パドックコメント')),
                ('hoof_comment', models.CharField(max_length=40, null=True, verbose_name='脚元コメント')),
                ('horse_gear_or_other_comment', models.CharField(max_length=40, null=True, verbose_name='馬具')),
                ('race_comment', models.CharField(max_length=40, null=True, verbose_name='レースコメント')),
                ('bandage', models.BooleanField(null=True, verbose_name='バンテージ')),
            ],
            options={
                'db_table': 'contenders',
            },
        ),
        migrations.CreateModel(
            name='HoofCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=255, unique=True)),
                ('value', models.CharField(max_length=255)),
                ('value_abbr', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'hoof_codes',
            },
        ),
        migrations.CreateModel(
            name='Horse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('pedigree_reg_num', models.CharField(max_length=8, unique=True)),
                ('name', models.CharField(max_length=36)),
                ('sex', models.CharField(choices=[('MALE', 'Male'), ('FEMALE', 'Female'), ('CASTRATED', 'Castrated')], max_length=255, null=True, verbose_name='性別')),
                ('hair_color', models.CharField(choices=[('CHESTNUT', '栗毛'), ('DARK_CHESTNUT', '栃栗'), ('BAY', '鹿毛'), ('DARK_BAY', '黒鹿'), ('BROWN', '青鹿'), ('BLACK', '青毛'), ('GRAY', '芦毛'), ('RED_ROAN', '栗粕'), ('BAY_ROAN', '鹿粕'), ('BLUE_ROAN', '青粕'), ('WHITE', '白毛')], max_length=255, null=True)),
                ('symbol', models.CharField(choices=[('01', '○抽'), ('02', '□抽'), ('03', '○父'), ('04', '○市'), ('05', '○地'), ('06', '○外'), ('07', '○父○抽'), ('08', '○父○市'), ('09', '○父○地'), ('10', '○市○地'), ('11', '○外○地'), ('12', '○父○市○地'), ('15', '○招'), ('16', '○招○外'), ('17', '○招○父'), ('18', '○招○市'), ('19', '○招○父○市'), ('20', '○父○外'), ('21', '□地'), ('22', '○外□地'), ('23', '○父□地'), ('24', '○市□地'), ('25', '○父○市□地'), ('26', '□外'), ('27', '○父□外')], max_length=255, null=True, verbose_name='馬記号')),
                ('sire_name', models.CharField(max_length=36, null=True)),
                ('dam_name', models.CharField(max_length=36, null=True)),
                ('damsire_name', models.CharField(max_length=36, null=True)),
                ('birthday', models.DateField(null=True)),
                ('sire_birth_yr', models.PositiveSmallIntegerField(null=True)),
                ('dam_birth_yr', models.PositiveSmallIntegerField(null=True)),
                ('damsire_birth_yr', models.PositiveSmallIntegerField(null=True)),
                ('owner_name', models.CharField(max_length=40, null=True, verbose_name='馬主名')),
                ('breeder_name', models.CharField(max_length=40, null=True)),
                ('breeding_loc_name', models.CharField(max_length=8, null=True)),
                ('is_retired', models.NullBooleanField()),
                ('sire_genealogy_code', models.CharField(max_length=4, null=True)),
                ('damsire_genealogy_code', models.CharField(max_length=4, null=True)),
                ('jrdb_saved_on', models.DateField(null=True)),
            ],
            options={
                'db_table': 'horses',
            },
        ),
        migrations.CreateModel(
            name='HorseGearCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=255, unique=True)),
                ('value', models.CharField(max_length=255)),
                ('value_abbr', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'horse_gear_codes',
            },
        ),
        migrations.CreateModel(
            name='HorseGearCodeCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=255, unique=True)),
                ('value', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'horse_gear_code_categories',
            },
        ),
        migrations.CreateModel(
            name='Jockey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=5, unique=True)),
                ('retired_on', models.DateField(null=True)),
                ('name', models.CharField(max_length=12, null=True)),
                ('name_kana', models.CharField(max_length=30, null=True)),
                ('name_abbr', models.CharField(max_length=6, null=True)),
                ('area', models.CharField(choices=[('KANTOU', '関東'), ('KANSAI', '関西'), ('OTHER', '他')], max_length=255, null=True)),
                ('training_center_name', models.CharField(max_length=4, null=True)),
                ('birthday', models.DateField(null=True)),
                ('lic_acquired_yr', models.PositiveIntegerField(null=True)),
                ('trainee_cat', models.CharField(choices=[('REDUCE_1K', '1K減'), ('REDUCE_2K', '2K減'), ('REDUCE_3K', '3K減')], max_length=255, null=True)),
                ('jrdb_comment', models.CharField(max_length=40, null=True)),
                ('jrdb_comment_date', models.DateField(null=True)),
                ('cur_yr_leading', models.PositiveIntegerField(null=True)),
                ('cur_yr_flat_r', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveSmallIntegerField(), null=True, size=4)),
                ('cur_yr_obst_r', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveSmallIntegerField(), null=True, size=4)),
                ('cur_yr_sp_wins', models.PositiveIntegerField(null=True)),
                ('cur_yr_hs_wins', models.PositiveIntegerField(null=True)),
                ('prev_yr_leading', models.PositiveIntegerField(null=True)),
                ('prev_yr_flat_r', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveSmallIntegerField(), null=True, size=4)),
                ('prev_yr_obst_r', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveSmallIntegerField(), null=True, size=4)),
                ('prev_yr_sp_wins', models.PositiveIntegerField(null=True)),
                ('prev_yr_hs_wins', models.PositiveIntegerField(null=True)),
                ('sum_flat_r', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveSmallIntegerField(), null=True, size=4)),
                ('sum_obst_r', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveSmallIntegerField(), null=True, size=4)),
                ('jrdb_saved_on', models.DateField(null=True)),
            ],
            options={
                'db_table': 'jockeys',
            },
        ),
        migrations.CreateModel(
            name='PaceFlowCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=255, unique=True)),
                ('value', models.CharField(max_length=255)),
                ('display', models.CharField(max_length=2)),
            ],
            options={
                'db_table': 'pace_flow_codes',
            },
        ),
        migrations.CreateModel(
            name='Race',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('yr', models.PositiveSmallIntegerField()),
                ('round', models.PositiveSmallIntegerField()),
                ('day', models.CharField(max_length=1)),
                ('num', models.PositiveSmallIntegerField()),
                ('category', models.CharField(choices=[('TWO_YR_OLD', '2歳'), ('THREE_YR_OLD', '3歳'), ('THREE_YR_OLD_AND_UP', '3歳以上'), ('FOUR_YR_OLD_AND_UP', '4歳以上'), ('OBSTACLE', '障害'), ('OTHER', 'その他')], max_length=255, null=True)),
                ('horse_sex_symbol', models.CharField(choices=[('NA', 'なし'), ('MALE', '牡馬限定'), ('FEMALE', '牝馬限定'), ('MALE_CASTRATED', '牡・せん馬限定'), ('FEMALE_CASTRATED', '牡・牝馬限定')], max_length=255, null=True)),
                ('horse_type_symbol', models.CharField(choices=[('NA', 'なし'), ('MIX', '○混'), ('(D)', '○父'), ('(A)(S)', '○市○抽'), ('KYU', '九州産限定'), ('INT', '○国際混')], max_length=255, null=True)),
                ('interleague_symbol', models.CharField(choices=[('NA', 'なし'), ('DSN', '○指'), ('DES', '□指'), ('SD', '○特指'), ('JUNIOR', '若手')], max_length=255, null=True)),
                ('impost_class', models.CharField(choices=[('HANDICAP', 'ハンデ'), ('SPECIAL_WEIGHT', '別定'), ('WEIGHT_FOR_AGE', '馬齢'), ('SPECIAL_WEIGHT_AGE_SEX', '定量')], max_length=255, null=True)),
                ('grade', models.CharField(choices=[('G1', 'Ｇ１'), ('G2', 'Ｇ２'), ('G3', 'Ｇ３'), ('HIGH_STAKES', '重賞'), ('SPECIAL', '特別'), ('LISTED', 'Ｌ（リステッド競走）')], max_length=255, null=True)),
                ('track_cond', models.CharField(choices=[('FIRM', '良'), ('FIRM_FAST', '速良'), ('FIRM_SLOW', '遅良'), ('GOOD', '稍重'), ('GOOD_FAST', '速稍重'), ('GOOD_SLOW', '遅稍重'), ('YIELDING', '重'), ('YIELDING_FAST', '速重'), ('YIELDING_SLOW', '遅重'), ('SOFT', '不良'), ('SOFT_FAST', '速不良'), ('SOFT_SLOW', '遅不良')], max_length=255, null=True)),
                ('weather', models.CharField(choices=[('FINE', '晴'), ('CLOUDY', '曇'), ('DRIZZLE', '小雨'), ('RAINY', '雨'), ('LIGHT_SNOW', '小雪'), ('SNOW', '雪')], max_length=255, null=True)),
                ('name', models.CharField(max_length=50, null=True)),
                ('name_abbr', models.CharField(max_length=8, null=True)),
                ('name_short', models.CharField(max_length=18, null=True)),
                ('started_at', models.DateTimeField(null=True)),
                ('distance', models.PositiveSmallIntegerField(null=True)),
                ('surface', models.CharField(choices=[('TURF', '芝'), ('DIRT', 'ダート'), ('OBSTACLE', '障害')], max_length=255, null=True)),
                ('direction', models.CharField(choices=[('RIGHT', '右'), ('LEFT', '左'), ('STRAIGHT', '直'), ('OTHER', '他')], max_length=255, null=True)),
                ('course_inout', models.CharField(choices=[('INSIDE', '通常(内)'), ('OUTSIDE', '外'), ('STRAIGHT_DIRT', '直ダ'), ('OTHER', '他')], max_length=255, null=True)),
                ('course_label', models.CharField(choices=[('A', 'A'), ('A1', 'A1'), ('A2', 'A2'), ('B', 'B'), ('C', 'C'), ('D', 'D')], max_length=255, null=True)),
                ('host_category', models.CharField(choices=[('KANTOU', '関東'), ('KANSAI', '関西'), ('LOCAL', 'ローカル')], max_length=255, null=True)),
                ('comment', models.TextField(max_length=500)),
                ('nth_occurrence', models.PositiveSmallIntegerField(null=True)),
                ('win5', models.PositiveSmallIntegerField(null=True)),
                ('contender_count', models.PositiveSmallIntegerField(null=True)),
                ('p1_purse', models.PositiveSmallIntegerField(null=True)),
                ('p2_purse', models.PositiveSmallIntegerField(null=True)),
                ('p3_purse', models.PositiveSmallIntegerField(null=True)),
                ('p4_purse', models.PositiveSmallIntegerField(null=True)),
                ('p5_purse', models.PositiveSmallIntegerField(null=True)),
                ('p1_prize', models.PositiveSmallIntegerField(null=True)),
                ('p2_prize', models.PositiveSmallIntegerField(null=True)),
                ('c1_track_bias', django.contrib.postgres.fields.ArrayField(base_field=models.SmallIntegerField(), null=True, size=3)),
                ('c2_track_bias', django.contrib.postgres.fields.ArrayField(base_field=models.SmallIntegerField(), null=True, size=3)),
                ('bs_track_bias', django.contrib.postgres.fields.ArrayField(base_field=models.SmallIntegerField(), null=True, size=3, verbose_name='Backstretch track bias')),
                ('c3_track_bias', django.contrib.postgres.fields.ArrayField(base_field=models.SmallIntegerField(), null=True, size=3)),
                ('c4_track_bias', django.contrib.postgres.fields.ArrayField(base_field=models.SmallIntegerField(), null=True, size=5)),
                ('hs_track_bias', django.contrib.postgres.fields.ArrayField(base_field=models.SmallIntegerField(), null=True, size=5, verbose_name='Homestretch track bias')),
                ('sold_win', models.BooleanField(null=True)),
                ('sold_show', models.BooleanField(null=True)),
                ('sold_bracket_quinella', models.BooleanField(null=True)),
                ('sold_quinella', models.BooleanField(null=True)),
                ('sold_exacta', models.BooleanField(null=True)),
                ('sold_duet', models.BooleanField(null=True)),
                ('sold_trio', models.BooleanField(null=True)),
                ('sold_trifecta', models.BooleanField(null=True)),
                ('track_speed_shift', models.SmallIntegerField(null=True)),
                ('pace_cat', models.CharField(choices=[('HIGH', 'ハイ'), ('MEDIUM', '平均'), ('SLOW', 'スロー')], max_length=255)),
                ('pace_idx', models.FloatField(help_text='レースのペースを指数化したもの', null=True)),
                ('odds_trio', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(null=True), null=True, size=816)),
                ('odds_exacta', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(null=True), null=True, size=306)),
                ('odds_trifecta', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(null=True), null=True, size=4896)),
                ('odds_duet', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(null=True), null=True, size=153)),
                ('odds_win', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(null=True), null=True, size=18)),
                ('odds_show', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(null=True), null=True, size=18)),
                ('odds_quinella', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(null=True), null=True, size=153)),
            ],
            options={
                'db_table': 'races',
            },
        ),
        migrations.CreateModel(
            name='RaceClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=255, unique=True)),
                ('value', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'race_classes',
            },
        ),
        migrations.CreateModel(
            name='RaceConditionCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=255, unique=True)),
                ('value', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'race_condition_codes',
            },
        ),
        migrations.CreateModel(
            name='RaceConditionGroupCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=255, unique=True)),
                ('value', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'race_condition_group_codes',
            },
        ),
        migrations.CreateModel(
            name='Racetrack',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'racetracks',
            },
        ),
        migrations.CreateModel(
            name='SpecialMentionCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=255, unique=True)),
                ('value', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'special_mention_codes',
            },
        ),
        migrations.CreateModel(
            name='Trainer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=5, unique=True)),
                ('retired_on', models.DateField(null=True)),
                ('name', models.CharField(max_length=12, null=True)),
                ('name_kana', models.CharField(max_length=30, null=True)),
                ('name_abbr', models.CharField(max_length=6, null=True)),
                ('area', models.CharField(choices=[('KANTOU', '関東'), ('KANSAI', '関西'), ('OTHER', '他')], max_length=255, null=True)),
                ('training_center_name', models.CharField(max_length=4, null=True)),
                ('birthday', models.DateField(null=True)),
                ('lic_acquired_yr', models.PositiveIntegerField(null=True)),
                ('jrdb_comment', models.CharField(max_length=40, null=True)),
                ('jrdb_comment_date', models.DateField(null=True)),
                ('cur_yr_leading', models.PositiveIntegerField(null=True)),
                ('cur_yr_flat_r', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveSmallIntegerField(), null=True, size=4)),
                ('cur_yr_obst_r', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveSmallIntegerField(), null=True, size=4)),
                ('cur_yr_sp_wins', models.PositiveIntegerField(null=True)),
                ('cur_yr_hs_wins', models.PositiveIntegerField(null=True)),
                ('prev_yr_leading', models.PositiveIntegerField(null=True)),
                ('prev_yr_flat_r', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveSmallIntegerField(), null=True, size=4)),
                ('prev_yr_obst_r', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveSmallIntegerField(), null=True, size=4)),
                ('prev_yr_sp_wins', models.PositiveIntegerField(null=True)),
                ('prev_yr_hs_wins', models.PositiveIntegerField(null=True)),
                ('sum_flat_r', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveSmallIntegerField(), null=True, size=4)),
                ('sum_obst_r', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveSmallIntegerField(), null=True, size=4)),
                ('jrdb_saved_on', models.DateField(null=True)),
            ],
            options={
                'db_table': 'trainers',
            },
        ),
        migrations.AddField(
            model_name='raceconditioncode',
            name='race_condition_group_code',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jrdb.RaceConditionGroupCode'),
        ),
        migrations.AddField(
            model_name='race',
            name='cond',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='jrdb.RaceConditionCode'),
        ),
        migrations.AddField(
            model_name='race',
            name='pace_flow',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='jrdb.PaceFlowCode'),
        ),
        migrations.AddField(
            model_name='race',
            name='racetrack',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jrdb.Racetrack'),
        ),
        migrations.AddField(
            model_name='jockey',
            name='trainer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='jrdb.Trainer'),
        ),
        migrations.AddField(
            model_name='horsegearcode',
            name='horse_gear_code_category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jrdb.HorseGearCodeCategory'),
        ),
        migrations.AddField(
            model_name='horse',
            name='owner_racetrack',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='jrdb.Racetrack', verbose_name='馬主会'),
        ),
        migrations.AddField(
            model_name='contender',
            name='bit',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='jrdb.HorseGearCode', verbose_name='ハミ'),
        ),
        migrations.AddField(
            model_name='contender',
            name='exostosis',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='jrdb.HorseGearCode', verbose_name='骨瘤'),
        ),
        migrations.AddField(
            model_name='contender',
            name='figure_sp_mention_1',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='jrdb.SpecialMentionCode', verbose_name='体型総合１'),
        ),
        migrations.AddField(
            model_name='contender',
            name='figure_sp_mention_2',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='jrdb.SpecialMentionCode', verbose_name='体型総合２'),
        ),
        migrations.AddField(
            model_name='contender',
            name='figure_sp_mention_3',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='jrdb.SpecialMentionCode', verbose_name='体型総合３'),
        ),
        migrations.AddField(
            model_name='contender',
            name='hoof_back_left',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='jrdb.HorseGearCode', verbose_name='左後'),
        ),
        migrations.AddField(
            model_name='contender',
            name='hoof_back_right',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='jrdb.HorseGearCode', verbose_name='右後'),
        ),
        migrations.AddField(
            model_name='contender',
            name='hoof_cond',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='jrdb.HorseGearCode', verbose_name='蹄状態'),
        ),
        migrations.AddField(
            model_name='contender',
            name='hoof_front_left',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='jrdb.HorseGearCode', verbose_name='左前'),
        ),
        migrations.AddField(
            model_name='contender',
            name='hoof_front_right',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='jrdb.HorseGearCode', verbose_name='右前'),
        ),
        migrations.AddField(
            model_name='contender',
            name='hoof_overall',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='jrdb.HorseGearCode', verbose_name='総合'),
        ),
        migrations.AddField(
            model_name='contender',
            name='horse',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jrdb.Horse', verbose_name='馬'),
        ),
        migrations.AddField(
            model_name='contender',
            name='horse_gear',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='jrdb.HorseGearCode', verbose_name='馬具コード'),
        ),
        migrations.AddField(
            model_name='contender',
            name='horse_sp_mention_1',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='jrdb.SpecialMentionCode', verbose_name='馬特記１'),
        ),
        migrations.AddField(
            model_name='contender',
            name='horse_sp_mention_2',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='jrdb.SpecialMentionCode', verbose_name='馬特記２'),
        ),
        migrations.AddField(
            model_name='contender',
            name='horse_sp_mention_3',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='jrdb.SpecialMentionCode', verbose_name='馬特記３'),
        ),
        migrations.AddField(
            model_name='contender',
            name='horseshoe',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='jrdb.HorseGearCode', verbose_name='蹄鉄'),
        ),
        migrations.AddField(
            model_name='contender',
            name='jockey',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='jrdb.Jockey', verbose_name='騎手'),
        ),
        migrations.AddField(
            model_name='contender',
            name='pace_flow',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='jrdb.PaceFlowCode', verbose_name='本賞金'),
        ),
        migrations.AddField(
            model_name='contender',
            name='periostitis',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='jrdb.HorseGearCode', verbose_name='ソエ'),
        ),
        migrations.AddField(
            model_name='contender',
            name='race',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jrdb.Race', verbose_name='レース'),
        ),
        migrations.AddField(
            model_name='contender',
            name='sp_mention',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='jrdb.SpecialMentionCode', verbose_name='特記コード'),
        ),
        migrations.AddField(
            model_name='contender',
            name='trainer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='jrdb.Trainer', verbose_name='調教師'),
        ),
        migrations.AlterUniqueTogether(
            name='race',
            unique_together={('racetrack', 'yr', 'round', 'day', 'num')},
        ),
        migrations.AlterUniqueTogether(
            name='contender',
            unique_together={('race', 'horse')},
        ),
    ]
