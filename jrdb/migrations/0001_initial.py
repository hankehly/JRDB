# Generated by Django 2.1.7 on 2019-03-24 02:50

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Contender',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('num', models.PositiveSmallIntegerField()),
                ('order_of_finish', models.PositiveSmallIntegerField()),
                ('penalty', models.CharField(choices=[('NORMAL', '異常なし'), ('SCRATCHED', '取消'), ('EXCLUDED', '除外'), ('FAIL_TO_FINISH', '中止'), ('DISQUALIFIED', '失格'), ('DISQUALIFIED_AND_PLACED', '降着'), ('REMOUNT', '再騎乗')], max_length=255)),
                ('time', models.FloatField()),
                ('mounted_weight', models.FloatField()),
                ('odds_win', models.FloatField(null=True)),
                ('popularity', models.PositiveSmallIntegerField()),
                ('IDM', models.SmallIntegerField()),
                ('speed_index', models.SmallIntegerField(help_text='素点')),
                ('pace', models.PositiveSmallIntegerField(null=True)),
                ('positioning', models.PositiveSmallIntegerField(help_text='位置取', null=True)),
                ('late_start', models.PositiveSmallIntegerField(help_text='出遅', null=True)),
                ('disadvt', models.PositiveSmallIntegerField(help_text='不利', null=True)),
                ('b3f_disadvt', models.PositiveSmallIntegerField(help_text='前３Ｆ内での不利', null=True)),
                ('mid_disadvt', models.PositiveSmallIntegerField(help_text='道中での不利', null=True)),
                ('f3f_disadvt', models.PositiveSmallIntegerField(help_text='後３Ｆ内での不利', null=True)),
                ('race_line', models.CharField(choices=[('INNERMOST', '最内'), ('INNER', '内'), ('MIDDLE', '中'), ('OUTER', '外'), ('OUTERMOST', '大外')], help_text='コース取り', max_length=255)),
                ('improvement', models.CharField(choices=[('AA', 'AA'), ('A', 'A'), ('B', 'B'), ('C', 'C'), ('?', '?')], help_text='上昇度コード', max_length=255)),
                ('physique', models.CharField(choices=[('FAT', '太い'), ('OVERWEIGHT', '余裕'), ('GOOD', '良い'), ('NORMAL', '普通'), ('THIN', '細い'), ('FRESH', '張り'), ('LOOSE', '緩い')], help_text='馬体コード', max_length=255)),
                ('demeanor', models.CharField(choices=[('GOOD_CONDITION', '状態良'), ('NORMAL', '平凡'), ('UNSTABLE', '不安定'), ('EXCITED', 'イレ込'), ('GOOD_SPIRIT', '気合良'), ('LACKING_SPIRIT', '気不足'), ('RESTLESS', 'チャカ'), ('EXCITED_AND_RESTLESS', 'イレチ（イレ込+チャカつき）')], help_text='気配コード', max_length=255)),
                ('pace_cat', models.CharField(choices=[('HIGH', 'ハイ'), ('MEDIUM', '平均'), ('SLOW', 'スロー')], max_length=255)),
                ('b3f_time_index', models.FloatField(null=True)),
                ('f3f_time_index', models.FloatField(null=True)),
                ('pace_index', models.FloatField(help_text='馬のペースを指数化したもの', null=True)),
                ('margin', models.FloatField(help_text='1(2)着タイム差')),
                ('b3f_time', models.FloatField(help_text='前３Ｆタイム')),
                ('f3f_time', models.FloatField(help_text='後３Ｆタイム')),
                ('c1p', models.PositiveSmallIntegerField(help_text='コーナー順位1', null=True)),
                ('c2p', models.PositiveSmallIntegerField(help_text='コーナー順位2', null=True)),
                ('c3p', models.PositiveSmallIntegerField(help_text='コーナー順位3', null=True)),
                ('c4p', models.PositiveSmallIntegerField(help_text='コーナー順位4', null=True)),
                ('b3f_1p_margin', models.FloatField(help_text='前３Ｆ地点での先頭とのタイム差（0.1秒単位）', null=True)),
                ('f3f_1p_margin', models.FloatField(help_text='後３Ｆ地点での先頭とのタイム差（0.1秒単位）', null=True)),
                ('weight', models.PositiveSmallIntegerField(help_text='馬体重')),
                ('weight_diff', models.PositiveSmallIntegerField(help_text='馬体重増減', null=True)),
                ('running_style', models.CharField(choices=[('FRONT_RUNNER', '逃げ'), ('STALKER', '先行'), ('OTP', '差し'), ('OTP_STRETCH', '追込'), ('OTP_GOOD_POS', '好位差し'), ('VERSATILE', '自在')], max_length=255)),
                ('purse', models.PositiveSmallIntegerField()),
                ('c4_race_line', models.CharField(choices=[('INNERMOST', '最内'), ('INNER', '内'), ('MIDDLE', '中'), ('OUTER', '外'), ('OUTERMOST', '大外')], max_length=255)),
            ],
            options={
                'db_table': 'contenders',
            },
        ),
        migrations.CreateModel(
            name='HoofCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=255, unique=True)),
                ('value', models.CharField(max_length=255)),
                ('value_abbr', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'hoof_codes',
            },
        ),
        migrations.CreateModel(
            name='Horse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('pedigree_reg_num', models.CharField(max_length=8, unique=True)),
                ('name', models.CharField(max_length=36)),
                ('sex', models.CharField(choices=[('MALE', 'Male'), ('FEMALE', 'Female'), ('CASTRATED', 'Castrated')], max_length=255, null=True)),
                ('hair_color', models.CharField(choices=[('CHESTNUT', '栗毛'), ('DARK_CHESTNUT', '栃栗'), ('BAY', '鹿毛'), ('DARK_BAY', '黒鹿'), ('BROWN', '青鹿'), ('BLACK', '青毛'), ('GRAY', '芦毛'), ('RED_ROAN', '栗粕'), ('BAY_ROAN', '鹿粕'), ('BLUE_ROAN', '青粕'), ('WHITE', '白毛')], max_length=255, null=True)),
                ('symbol', models.CharField(choices=[('01', '○抽'), ('02', '□抽'), ('03', '○父'), ('04', '○市'), ('05', '○地'), ('06', '○外'), ('07', '○父○抽'), ('08', '○父○市'), ('09', '○父○地'), ('10', '○市○地'), ('11', '○外○地'), ('12', '○父○市○地'), ('15', '○招'), ('16', '○招○外'), ('17', '○招○父'), ('18', '○招○市'), ('19', '○招○父○市'), ('20', '○父○外'), ('21', '□地'), ('22', '○外□地'), ('23', '○父□地'), ('24', '○市□地'), ('25', '○父○市□地'), ('26', '□外'), ('27', '○父□外')], max_length=255, null=True)),
                ('sire_name', models.CharField(max_length=36, null=True)),
                ('dam_name', models.CharField(max_length=36, null=True)),
                ('damsire_name', models.CharField(max_length=36, null=True)),
                ('birthday', models.DateField(null=True)),
                ('sire_birth_yr', models.PositiveIntegerField(null=True)),
                ('dam_birth_yr', models.PositiveIntegerField(null=True)),
                ('damsire_birth_yr', models.PositiveIntegerField(null=True)),
                ('owner_name', models.CharField(max_length=40, null=True)),
                ('breeder_name', models.CharField(max_length=40, null=True)),
                ('breeding_loc_name', models.CharField(max_length=8, null=True)),
                ('is_retired', models.BooleanField(null=True)),
                ('sire_genealogy_code', models.CharField(max_length=4, null=True)),
                ('damsire_genealogy_code', models.CharField(max_length=4, null=True)),
                ('jrdb_saved_on', models.DateField()),
            ],
            options={
                'db_table': 'horses',
            },
        ),
        migrations.CreateModel(
            name='HorseGearCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=255, unique=True)),
                ('value', models.CharField(max_length=255)),
                ('value_abbr', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'horse_gear_codes',
            },
        ),
        migrations.CreateModel(
            name='HorseGearCodeCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=255, unique=True)),
                ('value', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'horse_gear_code_categories',
            },
        ),
        migrations.CreateModel(
            name='Jockey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=5, unique=True)),
                ('retired_on', models.DateField(null=True)),
                ('name', models.CharField(max_length=12, null=True)),
                ('name_kana', models.CharField(max_length=30, null=True)),
                ('name_abbr', models.CharField(max_length=6, null=True)),
                ('area', models.CharField(choices=[('KANTOU', '関西'), ('KANSAI', '関東'), ('OTHER', '他')], max_length=255, null=True)),
                ('training_center_name', models.CharField(max_length=4, null=True)),
                ('birthday', models.DateField(null=True)),
                ('lic_acquired_yr', models.PositiveIntegerField(null=True)),
                ('trainee_cat', models.CharField(choices=[('REDUCE_1K', '1K減'), ('REDUCE_2K', '2K減'), ('REDUCE_3K', '3K減')], max_length=255, null=True)),
                ('trainer_code', models.CharField(max_length=5, null=True, unique=True)),
                ('jrdb_comment', models.CharField(max_length=40, null=True)),
                ('jrdb_comment_date', models.DateField(null=True)),
                ('cur_yr_leading', models.PositiveIntegerField(null=True)),
                ('cur_yr_flat_r', models.CharField(max_length=255, null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid', message='Enter only digits separated by commas.')])),
                ('cur_yr_obst_r', models.CharField(max_length=255, null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid', message='Enter only digits separated by commas.')])),
                ('cur_yr_sp_wins', models.PositiveIntegerField(null=True)),
                ('cur_yr_hs_wins', models.PositiveIntegerField(null=True)),
                ('prev_yr_leading', models.PositiveIntegerField(null=True)),
                ('prev_yr_flat_r', models.CharField(max_length=255, null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid', message='Enter only digits separated by commas.')])),
                ('prev_yr_obst_r', models.CharField(max_length=255, null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid', message='Enter only digits separated by commas.')])),
                ('prev_yr_sp_wins', models.PositiveIntegerField(null=True)),
                ('prev_yr_hs_wins', models.PositiveIntegerField(null=True)),
                ('sum_flat_r', models.CharField(max_length=255, null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid', message='Enter only digits separated by commas.')])),
                ('sum_obst_r', models.CharField(max_length=255, null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid', message='Enter only digits separated by commas.')])),
                ('jrdb_saved_on', models.DateField()),
            ],
            options={
                'db_table': 'jockeys',
            },
        ),
        migrations.CreateModel(
            name='PaceFlowCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=255, unique=True)),
                ('value', models.CharField(max_length=255)),
                ('display', models.CharField(max_length=2)),
            ],
            options={
                'db_table': 'pace_flow_codes',
            },
        ),
        migrations.CreateModel(
            name='Race',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('yr', models.PositiveSmallIntegerField()),
                ('round', models.PositiveSmallIntegerField()),
                ('day', models.CharField(max_length=1)),
                ('num', models.PositiveSmallIntegerField()),
                ('category', models.CharField(choices=[('TWO_YR_OLD', '2歳'), ('THREE_YR_OLD', '3歳'), ('THREE_YR_OLD_AND_UP', '3歳以上'), ('FOUR_YR_OLD_AND_UP', '4歳以上'), ('OBSTACLE', '障害'), ('OTHER', 'その他')], max_length=255, null=True)),
                ('horse_sex_symbol', models.CharField(choices=[('NA', 'なし'), ('MALE', '牡馬限定'), ('FEMALE', '牝馬限定'), ('MALE_CASTRATED', '牡・せん馬限定'), ('FEMALE_CASTRATED', '牡・牝馬限定')], max_length=255, null=True)),
                ('horse_type_symbol', models.CharField(choices=[('NA', 'なし'), ('MIX', '○混'), ('(D)', '○父'), ('(A)(S)', '○市○抽'), ('KYU', '九州産限定'), ('INT', '○国際混')], max_length=255, null=True)),
                ('interleague_symbol', models.CharField(choices=[('NA', 'なし'), ('DSN', '○指'), ('DES', '□指'), ('SD', '○特指'), ('JUNIOR', '若手')], max_length=255, null=True)),
                ('impost_class', models.CharField(choices=[('HANDICAP', 'ハンデ'), ('SPECIAL_WEIGHT', '別定'), ('WEIGHT_FOR_AGE', '馬齢'), ('SPECIAL_WEIGHT_AGE_SEX', '定量')], max_length=255, null=True)),
                ('grade', models.CharField(choices=[('G1', 'Ｇ１'), ('G2', 'Ｇ２'), ('G3', 'Ｇ３'), ('HIGH_STAKES', '重賞'), ('SPECIAL', '特別'), ('LISTED', 'Ｌ（リステッド競走）')], max_length=255, null=True)),
                ('track_cond', models.CharField(choices=[('FIRM', '良'), ('FIRM_FAST', '速良'), ('FIRM_SLOW', '遅良'), ('GOOD', '稍重'), ('GOOD_FAST', '速稍重'), ('GOOD_SLOW', '遅稍重'), ('YIELDING', '重'), ('YIELDING_FAST', '速重'), ('YIELDING_SLOW', '遅重'), ('SOFT', '不良'), ('SOFT_FAST', '速不良'), ('SOFT_SLOW', '遅不良')], max_length=255, null=True)),
                ('weather', models.CharField(choices=[('FINE', '晴'), ('CLOUDY', '曇'), ('DRIZZLE', '小雨'), ('RAINY', '雨'), ('LIGHT_SNOW', '小雪'), ('SNOW', '雪')], max_length=255, null=True)),
                ('name', models.CharField(max_length=50, null=True)),
                ('name_abbr', models.CharField(max_length=8, null=True)),
                ('name_short', models.CharField(max_length=18, null=True)),
                ('started_at', models.DateTimeField(null=True)),
                ('distance', models.PositiveSmallIntegerField(null=True)),
                ('surface', models.CharField(choices=[('TURF', '芝'), ('DIRT', 'ダート'), ('OBSTACLE', '障害')], max_length=255, null=True)),
                ('direction', models.CharField(choices=[('RIGHT', '右'), ('LEFT', '左'), ('STRAIGHT', '直'), ('OTHER', '他')], max_length=255, null=True)),
                ('course_inout', models.CharField(choices=[('INSIDE', '通常(内)'), ('OUTSIDE', '外'), ('STRAIGHT_DIRT', '直ダ'), ('OTHER', '他')], max_length=255, null=True)),
                ('course_label', models.CharField(choices=[('A', 'A'), ('A1', 'A1'), ('A2', 'A2'), ('B', 'B'), ('C', 'C'), ('D', 'D')], max_length=255, null=True)),
                ('comment', models.TextField(max_length=500)),
                ('nth_occurrence', models.PositiveSmallIntegerField(null=True)),
                ('p1_purse', models.PositiveSmallIntegerField(null=True)),
                ('p2_purse', models.PositiveSmallIntegerField(null=True)),
                ('p3_purse', models.PositiveSmallIntegerField(null=True)),
                ('p4_purse', models.PositiveSmallIntegerField(null=True)),
                ('p5_purse', models.PositiveSmallIntegerField(null=True)),
                ('p1_prize', models.PositiveSmallIntegerField(null=True)),
                ('p2_prize', models.PositiveSmallIntegerField(null=True)),
                ('c1_track_bias', models.CharField(help_text='（内、中、外）', max_length=255, null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid', message='Enter only digits separated by commas.')], verbose_name='Corner 1 track bias')),
                ('c2_track_bias', models.CharField(help_text='（内、中、外）', max_length=255, null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid', message='Enter only digits separated by commas.')], verbose_name='Corner 2 track bias')),
                ('c3_track_bias', models.CharField(help_text='（内、中、外）', max_length=255, null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid', message='Enter only digits separated by commas.')], verbose_name='Corner 3 track bias')),
                ('c4_track_bias', models.CharField(help_text='（最内、内、中、外、大外）', max_length=255, null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid', message='Enter only digits separated by commas.')], verbose_name='Corner 4 track bias')),
                ('bs_track_bias', models.CharField(help_text='（内、中、外）', max_length=255, null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid', message='Enter only digits separated by commas.')], verbose_name='Backstretch track bias')),
                ('hs_track_bias', models.CharField(help_text='（最内、内、中、外、大外）', max_length=255, null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid', message='Enter only digits separated by commas.')], verbose_name='Homestretch track bias')),
                ('issued_bt_win', models.BooleanField(null=True)),
                ('issued_bt_show', models.BooleanField(null=True)),
                ('issued_bt_bracket_quinella', models.BooleanField(null=True)),
                ('issued_bt_quinella', models.BooleanField(null=True)),
                ('issued_bt_exacta', models.BooleanField(null=True)),
                ('issued_bt_duet', models.BooleanField(null=True)),
                ('issued_bt_trio', models.BooleanField(null=True)),
                ('issued_bt_trifecta', models.BooleanField(null=True)),
                ('track_speed_shift', models.SmallIntegerField(null=True)),
                ('pace_cat', models.CharField(choices=[('HIGH', 'ハイ'), ('MEDIUM', '平均'), ('SLOW', 'スロー')], max_length=255)),
                ('pace_index', models.FloatField(help_text='レースのペースを指数化したもの', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RaceClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=255, unique=True)),
                ('value', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'race_classes',
            },
        ),
        migrations.CreateModel(
            name='RaceConditionCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=255, unique=True)),
                ('value', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'race_condition_codes',
            },
        ),
        migrations.CreateModel(
            name='RaceConditionGroupCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=255, unique=True)),
                ('value', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'race_condition_group_codes',
            },
        ),
        migrations.CreateModel(
            name='Racetrack',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'racetracks',
            },
        ),
        migrations.CreateModel(
            name='SpecialMentionCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=255, unique=True)),
                ('value', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'special_mention_codes',
            },
        ),
        migrations.CreateModel(
            name='Trainer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=5, unique=True)),
                ('retired_on', models.DateField(null=True)),
                ('name', models.CharField(max_length=12, null=True)),
                ('name_kana', models.CharField(max_length=30, null=True)),
                ('name_abbr', models.CharField(max_length=6, null=True)),
                ('area', models.CharField(choices=[('KANSAI', '関東'), ('KANTOU', '関西'), ('OTHER', '他')], max_length=255, null=True)),
                ('training_center_name', models.CharField(max_length=4, null=True)),
                ('birthday', models.DateField(null=True)),
                ('lic_acquired_yr', models.PositiveIntegerField(null=True)),
                ('jrdb_comment', models.CharField(max_length=40, null=True)),
                ('jrdb_comment_date', models.DateField(null=True)),
                ('cur_yr_leading', models.PositiveIntegerField(null=True)),
                ('cur_yr_flat_r', models.CharField(max_length=255, null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid', message='Enter only digits separated by commas.')])),
                ('cur_yr_obst_r', models.CharField(max_length=255, null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid', message='Enter only digits separated by commas.')])),
                ('cur_yr_sp_wins', models.PositiveIntegerField(null=True)),
                ('cur_yr_hs_wins', models.PositiveIntegerField(null=True)),
                ('prev_yr_leading', models.PositiveIntegerField(null=True)),
                ('prev_yr_flat_r', models.CharField(max_length=255, null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid', message='Enter only digits separated by commas.')])),
                ('prev_yr_obst_r', models.CharField(max_length=255, null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid', message='Enter only digits separated by commas.')])),
                ('prev_yr_sp_wins', models.PositiveIntegerField(null=True)),
                ('prev_yr_hs_wins', models.PositiveIntegerField(null=True)),
                ('sum_flat_r', models.CharField(max_length=255, null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid', message='Enter only digits separated by commas.')])),
                ('sum_obst_r', models.CharField(max_length=255, null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid', message='Enter only digits separated by commas.')])),
                ('jrdb_saved_on', models.DateField()),
            ],
            options={
                'db_table': 'trainers',
            },
        ),
        migrations.AddField(
            model_name='raceconditioncode',
            name='race_condition_group_code',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jrdb.RaceConditionGroupCode'),
        ),
        migrations.AddField(
            model_name='race',
            name='cond',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='jrdb.RaceConditionCode'),
        ),
        migrations.AddField(
            model_name='race',
            name='pace_flow',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='jrdb.PaceFlowCode'),
        ),
        migrations.AddField(
            model_name='race',
            name='racetrack',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jrdb.Racetrack'),
        ),
        migrations.AddField(
            model_name='horsegearcode',
            name='horse_gear_code_category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jrdb.HorseGearCodeCategory'),
        ),
        migrations.AddField(
            model_name='horse',
            name='owner_racetrack',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='jrdb.Racetrack'),
        ),
        migrations.AddField(
            model_name='contender',
            name='horse',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jrdb.Horse'),
        ),
        migrations.AddField(
            model_name='contender',
            name='jockey',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jrdb.Jockey'),
        ),
        migrations.AddField(
            model_name='contender',
            name='pace_flow',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='jrdb.PaceFlowCode'),
        ),
        migrations.AddField(
            model_name='contender',
            name='race',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jrdb.Race'),
        ),
        migrations.AddField(
            model_name='contender',
            name='trainer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jrdb.Trainer'),
        ),
        migrations.AlterUniqueTogether(
            name='race',
            unique_together={('racetrack', 'yr', 'round', 'day', 'num')},
        ),
        migrations.AlterUniqueTogether(
            name='contender',
            unique_together={('race', 'horse', 'jockey', 'trainer')},
        ),
    ]
